{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/deck.service\";\nimport * as i3 from \"../services/flashcard.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function (a2) {\n  return [\"/flashcardform\", \"update\", a2];\n};\nfunction DeckComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 39)(2, \"div\", 27)(3, \"div\", 27)(4, \"h3\", 40);\n    i0.ɵɵtext(5, \"Front:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 27)(9, \"h3\");\n    i0.ɵɵtext(10, \"Back:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(13, \"hr\");\n    i0.ɵɵelementStart(14, \"div\", 41)(15, \"a\", 42);\n    i0.ɵɵtext(16, \" Update \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"a\", 43);\n    i0.ɵɵtext(18, \" Delete \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 44)(20, \"div\", 21)(21, \"div\", 22)(22, \"div\", 23)(23, \"h5\", 24);\n    i0.ɵɵtext(24, \"Delete Flashcard\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 25)(26, \"div\", 26)(27, \"div\", 27)(28, \"div\", 45)(29, \"div\", 28)(30, \"p\");\n    i0.ɵɵelement(31, \"i\", 29);\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"p\");\n    i0.ɵɵelement(34, \"i\", 30);\n    i0.ɵɵtext(35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"p\");\n    i0.ɵɵtext(37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"p\");\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(40, \"hr\");\n    i0.ɵɵelementStart(41, \"h6\", 32);\n    i0.ɵɵtext(42, \"Are you sure that you want to delete this flashcard?\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(43, \"div\", 46);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(44, \"div\", 34)(45, \"a\", 35);\n    i0.ɵɵelement(46, \"i\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function DeckComponent_div_23_Template_button_click_47_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const flashcard_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteFlashcard(flashcard_r1.FlashcardId));\n    });\n    i0.ɵɵelement(48, \"i\", 38);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const flashcard_r1 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(flashcard_r1.Front);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(flashcard_r1.Back);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c0, flashcard_r1.FlashcardId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"data-bs-target\", \"#delete_\" + flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"delete_\" + flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(13);\n    i0.ɵɵtextInterpolate1(\" Flashcard ID: \", flashcard_r1.FlashcardId, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Date Created: \", flashcard_r1.CreationDate, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Front: \", flashcard_r1.Front, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Back: \", flashcard_r1.Back, \"\");\n  }\n}\nconst _c1 = function (a2) {\n  return [\"/deckform\", \"update\", a2];\n};\nconst _c2 = function (a1) {\n  return [\"/flashcardone\", a1];\n};\nconst _c3 = function (a2) {\n  return [\"/flashcardform\", \"create\", a2];\n};\nexport class DeckComponent {\n  // Injecting services into the component\n  constructor(_router, _deckService, _flashcardService, _route) {\n    this._router = _router;\n    this._deckService = _deckService;\n    this._flashcardService = _flashcardService;\n    this._route = _route;\n    // Component properties\n    this.viewTitle = \"Table\";\n    this.decks = [];\n    this.flashcards = [];\n    this.deck = {\n      DeckId: 0,\n      DeckName: \"\",\n      DeckDescription: \"\",\n      CreationDate: \"\",\n      FolderId: 0\n    };\n  }\n  // Method to delete a deck\n  deleteDeck() {\n    this._deckService.deleteItem(this.deck.DeckId).subscribe({\n      next: response => {\n        if (response.success) {\n          // Navigate to the corresponding folder upon successful deletion\n          this._router.navigate([\"/folder/\" + this.deck.FolderId]);\n        }\n      },\n      error: error => {\n        console.log(\"Error deleting item:\", error);\n      }\n    });\n  }\n  // Method to delete a flashcard\n  deleteFlashcard(flashcardId) {\n    this._flashcardService.deleteItem(flashcardId).subscribe({\n      next: response => {\n        if (response.success) {\n          // Reload the page upon successful deletion\n          this.reloadPage();\n        }\n      },\n      error: error => {\n        console.log(\"Error deleting item:\", error);\n      }\n    });\n  }\n  // Method to reload the page\n  reloadPage() {\n    location.reload();\n  }\n  // Method to get deck information by ID\n  getDeck(deckId) {\n    this._deckService.getDeckById(deckId).subscribe(data => {\n      this.deck = data;\n      // Update the creation date format for the deck\n      this.updateCreationDateDeck(this.deck);\n    });\n  }\n  // Method to get flashcards by deck ID\n  getFlashcards(deckId) {\n    this._flashcardService.getFlashcardsByDeckId(deckId).subscribe(data => {\n      // Update the creation date format for each flashcard\n      this.flashcards = data;\n      this.updateCreationDateFlashcard(this.flashcards);\n    });\n  }\n  // Method to update the creation date format for a deck\n  updateCreationDateDeck(deck) {\n    const datePart = deck.CreationDate.split('T')[0];\n    deck.CreationDate = datePart;\n    return deck;\n  }\n  // Method to update the creation date format for flashcards\n  updateCreationDateFlashcard(flashcards) {\n    flashcards.forEach(flashcard => {\n      const datePart = flashcard.CreationDate.split('T')[0];\n      flashcard.CreationDate = datePart;\n    });\n  }\n  // Method to navigate back based on folder existence\n  return() {\n    if (this.deck.FolderId == null) {\n      this._router.navigate([\"/library\"]);\n    } else {\n      this._router.navigate([\"/folder/\" + this.deck.FolderId]);\n    }\n  }\n  // Method to navigate to flashcard creation form\n  createFlashcard() {\n    this._router.navigate(['/flashcardform', 'create', this.deck.DeckId]).then(() => {\n      window.scrollTo(0, 0);\n    });\n  }\n  // Lifecycle method called when the component is initialized\n  ngOnInit() {\n    // Subscribe to route parameters to get the deck ID and fetch data\n    this._route.params.subscribe(params => {\n      const id = this.deck.DeckId = +params[\"id\"];\n      this.getDeck(id);\n      this.getFlashcards(id);\n    });\n  }\n}\nDeckComponent.ɵfac = function DeckComponent_Factory(t) {\n  return new (t || DeckComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DeckService), i0.ɵɵdirectiveInject(i3.FlashcardService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nDeckComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeckComponent,\n  selectors: [[\"app-deck-component\"]],\n  decls: 55,\n  vars: 16,\n  consts: [[1, \"container\", \"mb-5\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-end\", \"mt-5\"], [1, \"btn\", \"btn-secondary\", \"btn-block\", 3, \"click\"], [1, \"fa-solid\", \"fa-arrow-left-long\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-start\", \"text-center\"], [1, \"m-0\"], [1, \"link-secondary\", \"text-decoration-none\", \"ms-2\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#deletedeck\", 1, \"link-secondary\", \"text-decoration-none\", \"ms-3\"], [1, \"fa-solid\", \"fa-trash\", \"fa-2x\"], [1, \"d-flex\", \"justify-content-even\", \"align-items-baseline\", \"flex-wrap\", \"mt-4\", \"mb-4\", 2, \"word-break\", \"break-word\"], [1, \"m-2\", \"ms-0\", \"me-5\"], [1, \"m-1\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-play\", \"ms-2\"], [1, \"btn\", \"btn-success\", \"text-decoration-none\", 3, \"routerLink\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-outline-success\", \"text-decoration-none\", \"d-flex\", \"justify-content-center\", \"p-3\", \"mt-3\", 3, \"click\"], [1, \"fa-solid\", \"fa-plus\", \"fa-3x\"], [\"id\", \"deletedeck\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"deletemodal\", \"data-bs-backdrop\", \"static\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [1, \"modal-body\"], [1, \"container-sm\", \"d-flex\", \"bg-white\", \"justify-content-between\", \"ps-5\", \"pe-5\"], [1, \"d-flex\", \"flex-column\"], [1, \"text-danger-emphasis\"], [1, \"fa-solid\", \"fa-folder-closed\", \"me-2\"], [1, \"fa-regular\", \"fa-calendar-days\", \"me-2\"], [1, \"fa-solid\", \"fa-tag\", \"me-2\"], [1, \"text-danger\"], [1, \"w-50\", \"delete-deck\", \"d-none\", \"d-lg-block\"], [1, \"modal-footer\", \"d-flex\", \"justify-content-between\"], [\"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [1, \"fa-solid\", \"fa-arrow-rotate-left\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\"], [1, \"card\", \"d-flex\", \"p-3\", \"mt-3\", 2, \"background\", \"#BCEAD5\"], [\"id\", \"flashcard.FlashcardId\"], [1, \"d-flex\", \"justify-content-around\", \"mt-3\"], [1, \"btn\", \"btn-outline-secondary\", \"text-decoration-none\", \"ms-2\", 3, \"routerLink\"], [\"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-outline-danger\", \"text-decoration-none\", \"ms-3\"], [1, \"modal\", \"fade\", 3, \"id\"], [2, \"word-break\", \"break-word\"], [1, \"w-50\", \"delete-flashcard\", \"d-none\", \"d-lg-block\"]],\n  template: function DeckComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function DeckComponent_Template_a_click_2_listener() {\n        return ctx.return();\n      });\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h1\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"a\", 6);\n      i0.ɵɵelement(8, \"i\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"a\", 8);\n      i0.ɵɵelement(10, \"i\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"hr\");\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"h2\", 11);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\", 12);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 13)(18, \"a\", 14);\n      i0.ɵɵtext(19, \" Start \");\n      i0.ɵɵelement(20, \"i\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"a\", 16);\n      i0.ɵɵtext(22, \" Create Flashcard \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, DeckComponent_div_23_Template, 49, 11, \"div\", 17);\n      i0.ɵɵelementStart(24, \"a\", 18);\n      i0.ɵɵlistener(\"click\", function DeckComponent_Template_a_click_24_listener() {\n        return ctx.createFlashcard();\n      });\n      i0.ɵɵelement(25, \"i\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 20)(27, \"div\", 21)(28, \"div\", 22)(29, \"div\", 23)(30, \"h5\", 24);\n      i0.ɵɵtext(31, \"Delete Deck\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 25)(33, \"div\", 26)(34, \"div\", 27)(35, \"div\")(36, \"div\", 28)(37, \"p\");\n      i0.ɵɵelement(38, \"i\", 29);\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"p\");\n      i0.ɵɵelement(41, \"i\", 30);\n      i0.ɵɵtext(42);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"p\");\n      i0.ɵɵelement(44, \"i\", 31);\n      i0.ɵɵtext(45);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(46, \"hr\");\n      i0.ɵɵelementStart(47, \"h6\", 32);\n      i0.ɵɵtext(48, \"Are you sure that you want to delete this deck?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(49, \"div\", 33);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"div\", 34)(51, \"a\", 35);\n      i0.ɵɵelement(52, \"i\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"button\", 37);\n      i0.ɵɵlistener(\"click\", function DeckComponent_Template_button_click_53_listener() {\n        return ctx.deleteDeck();\n      });\n      i0.ɵɵelement(54, \"i\", 38);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"Deck \", ctx.deck.DeckId, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c1, ctx.deck.DeckId));\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.deck.DeckName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.deck.DeckDescription);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(12, _c2, ctx.deck.DeckId));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(14, _c3, ctx.deck.DeckId));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.flashcards);\n      i0.ɵɵadvance(16);\n      i0.ɵɵtextInterpolate1(\" Deck ID: \", ctx.deck.DeckId, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Date Created: \", ctx.deck.CreationDate, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Deck Name: \", ctx.deck.DeckName, \"\");\n    }\n  },\n  dependencies: [i4.NgForOf, i1.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","DeckComponent","constructor","_router","_deckService","_flashcardService","_route","DeckId","DeckName","DeckDescription","CreationDate","FolderId","deleteDeck","deleteItem","deck","subscribe","next","response","success","navigate","error","console","log","deleteFlashcard","flashcardId","reloadPage","location","reload","getDeck","deckId","getDeckById","data","updateCreationDateDeck","getFlashcards","getFlashcardsByDeckId","flashcards","updateCreationDateFlashcard","datePart","split","forEach","flashcard","return","createFlashcard","then","window","scrollTo","ngOnInit","params","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\BachelorProject\\API\\ClientApp\\src\\app\\deck\\deck.component.html","C:\\Users\\elija\\source\\repos\\BachelorProject\\API\\ClientApp\\src\\app\\deck\\deck.component.ts"],"sourcesContent":["<section class=\"container mb-5\">\r\n  <!-- Deck navigation and actions -->\r\n  <div class=\"d-flex justify-content-between align-items-end mt-5\">\r\n    <!-- Return to folder dashboard button -->\r\n    <a class=\"btn btn-secondary btn-block\"\r\n       (click)=\"return()\">\r\n      <i class=\"fa-solid fa-arrow-left-long\"></i>\r\n    </a>\r\n    <div class=\"d-flex justify-content-center align-items-start text-center\">\r\n      <h1 class=\"m-0\">Deck {{deck.DeckId}}</h1>\r\n      <!-- Edit deck button -->\r\n      <a class=\"link-secondary text-decoration-none ms-2\"\r\n         [routerLink]=\"['/deckform', 'update', deck.DeckId]\">\r\n        <i class=\"fa-solid fa-pen-to-square\"></i>\r\n      </a>\r\n    </div>\r\n    <!-- Delete deck button -->\r\n    <a class=\"link-secondary text-decoration-none ms-3\"\r\n       data-bs-toggle=\"modal\"\r\n       data-bs-target=\"#deletedeck\">\r\n      <i class=\"fa-solid fa-trash fa-2x\"></i>\r\n    </a>\r\n  </div>\r\n  <hr />\r\n  <!-- Deck introduction -->\r\n  <div class=\"d-flex justify-content-even align-items-baseline flex-wrap mt-4 mb-4\" style=\"word-break:break-word\">\r\n    <!-- Deck name -->\r\n    <h2 class=\"m-2 ms-0 me-5\">{{deck.DeckName}}</h2>\r\n    <!-- Deck description -->\r\n    <p class=\"m-1\">{{deck.DeckDescription}}</p>\r\n  </div>\r\n  <div class=\"d-flex justify-content-between\">\r\n    <!-- Button to start flashcards -->\r\n    <a class=\"btn btn-success\"\r\n       [routerLink]=\"['/flashcardone', deck.DeckId]\">\r\n      Start\r\n      <i class=\"fa-solid fa-play ms-2\"></i>\r\n    </a>\r\n    <!-- Button to create a new flashcard -->\r\n    <a class=\"btn btn-success text-decoration-none\"\r\n       [routerLink]=\"['/flashcardform', 'create', deck.DeckId]\">\r\n      Create Flashcard\r\n    </a>\r\n  </div>\r\n  <!-- Loop through each flashcard -->\r\n  <div *ngFor=\"let flashcard of flashcards\">\r\n    <div class=\"card d-flex p-3 mt-3\" style=\"background: #BCEAD5;\">\r\n      <div class=\"d-flex flex-column\">\r\n        <div class=\"d-flex flex-column\">\r\n          <h3 id=\"flashcard.FlashcardId\">Front:</h3>\r\n          <!-- Display the flashcard front -->\r\n          <p>{{flashcard.Front}}</p>\r\n        </div>\r\n        <div class=\"d-flex flex-column\">\r\n          <h3>Back:</h3>\r\n          <!-- Display the flashcard back -->\r\n          <p>{{flashcard.Back}}</p>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"d-flex justify-content-around mt-3\">\r\n        <!-- Button to update the flashcard -->\r\n        <a class=\"btn btn-outline-secondary text-decoration-none ms-2\"\r\n           [routerLink]=\"['/flashcardform', 'update' , flashcard.FlashcardId]\">\r\n          Update\r\n        </a>\r\n        <!-- Button to delete the flashcard with a modal confirmation -->\r\n        <a class=\"btn btn-outline-danger text-decoration-none ms-3\"\r\n             data-bs-toggle=\"modal\" [attr.data-bs-target]=\"'#delete_' + flashcard.FlashcardId\">\r\n          Delete\r\n        </a>\r\n      </div>\r\n      <!-- Modal for deleting the flashcard -->\r\n      <div class=\"modal fade\" [id]=\"'delete_' + flashcard.FlashcardId\">\r\n        <!-- Modal content -->\r\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Flashcard</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"container-sm d-flex bg-white justify-content-between ps-5 pe-5\">\r\n                <div class=\"d-flex flex-column \">\r\n                  <div style=\"word-break:break-word\">\r\n                    <div class=\"text-danger-emphasis\">\r\n                      <p><i class=\"fa-solid fa-folder-closed me-2\"></i>   Flashcard ID: {{flashcard.FlashcardId}}</p>\r\n                      <p><i class=\"fa-regular fa-calendar-days me-2\"></i> Date Created: {{flashcard.CreationDate}}</p>\r\n                      <p>Front: {{flashcard.Front}}</p>\r\n                      <p>Back: {{flashcard.Back}}</p>\r\n                    </div>\r\n                    <hr />\r\n                    <h6 class=\"text-danger\">Are you sure that you want to delete this flashcard?</h6>\r\n                  </div>\r\n                </div>\r\n                <div class=\"w-50 delete-flashcard d-none d-lg-block\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer d-flex justify-content-between\">\r\n              <a class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <i class=\"fa-solid fa-arrow-rotate-left\" ></i>\r\n              </a>\r\n              <button type=\"submit\" class=\"btn btn-danger\" (click)=\"deleteFlashcard(flashcard.FlashcardId)\" data-bs-dismiss=\"modal\" >\r\n                <i class=\"fa-solid fa-trash\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Button to create a new flashcard -->\r\n  <a class=\"btn btn-outline-success text-decoration-none d-flex justify-content-center p-3 mt-3\"\r\n      (click)=\"createFlashcard()\">\r\n    <i class=\"fa-solid fa-plus fa-3x\"></i>\r\n  </a>\r\n</section>\r\n\r\n<!-- modal delete for decks -->\r\n<div class=\"modal fade\"\r\n     id=\"deletedeck\"\r\n     tabindex=\"-1\"\r\n     role=\"dialog\"\r\n     aria-labelledby=\"deletemodal\"\r\n     data-bs-backdrop=\"static\"\r\n     aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Deck</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"container-sm d-flex bg-white justify-content-between ps-5 pe-5\">\r\n          <div class=\"d-flex flex-column \">\r\n            <div>\r\n              <!-- Displaying deck details including ID, creation date,and name -->\r\n              <div class=\"text-danger-emphasis\">\r\n                <p><i class=\"fa-solid fa-folder-closed me-2\"></i> Deck ID: {{deck.DeckId}}</p>\r\n                <p><i class=\"fa-regular fa-calendar-days me-2\"></i> Date Created: {{deck.CreationDate}}</p>\r\n                <p><i class=\"fa-solid fa-tag me-2\"></i> Deck Name: {{deck.DeckName}}</p>\r\n              </div>\r\n              <hr />\r\n              <h6 class=\"text-danger\">Are you sure that you want to delete this deck?</h6>\r\n            </div>\r\n          </div>\r\n          <!-- Visual representation of the deck to be deleted (hidden on larger screens) -->\r\n          <div class=\"w-50 delete-deck d-none d-lg-block\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer d-flex justify-content-between\">\r\n        <!-- Button to go back to the deck dashboard without deleting -->\r\n        <a class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n          <i class=\"fa-solid fa-arrow-rotate-left\"></i>\r\n        </a>\r\n        <!-- Button to confirm and proceed with deck deletion -->\r\n        <button type=\"submit\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\" (click)=\"deleteDeck()\">\r\n          <i class=\"fa-solid fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IDeck } from \"../models/deck\";\r\nimport { IFlashcard } from \"../models/flashcard\";\r\nimport { DeckService } from \"../services/deck.service\";\r\nimport { FlashcardService } from \"../services/flashcard.service\";\r\n\r\n@Component({\r\n  selector: \"app-deck-component\",\r\n  templateUrl: \"./deck.component.html\"\r\n})\r\n\r\nexport class DeckComponent implements OnInit{\r\n  // Component properties\r\n  viewTitle: string = \"Table\";\r\n  decks: IDeck[] = [];\r\n  flashcards: IFlashcard[] = [];\r\n  deck: IDeck = {\r\n    DeckId: 0,\r\n    DeckName: \"\",\r\n    DeckDescription: \"\",\r\n    CreationDate: \"\",\r\n    FolderId: 0\r\n  };\r\n\r\n  // Injecting services into the component\r\n  constructor(\r\n    private _router: Router,\r\n    private _deckService: DeckService,\r\n    private _flashcardService: FlashcardService,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  // Method to delete a deck\r\n  deleteDeck(): void {\r\n    this._deckService.deleteItem(this.deck.DeckId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Navigate to the corresponding folder upon successful deletion\r\n            this._router.navigate([\"/folder/\" + this.deck.FolderId]);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          console.log(\"Error deleting item:\", error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Method to delete a flashcard\r\n  deleteFlashcard(flashcardId: number): void {\r\n    this._flashcardService.deleteItem(flashcardId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Reload the page upon successful deletion\r\n            this.reloadPage();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          console.log(\"Error deleting item:\", error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Method to reload the page\r\n  reloadPage() {\r\n    location.reload();\r\n  }\r\n\r\n  // Method to get deck information by ID\r\n  getDeck(deckId: number): void {\r\n    this._deckService.getDeckById(deckId)\r\n      .subscribe(data => {\r\n        this.deck = data;\r\n        // Update the creation date format for the deck\r\n        this.updateCreationDateDeck(this.deck);\r\n      });\r\n  }\r\n\r\n  // Method to get flashcards by deck ID\r\n  getFlashcards(deckId: number): void {\r\n    this._flashcardService.getFlashcardsByDeckId(deckId)\r\n      .subscribe(data => {\r\n        // Update the creation date format for each flashcard\r\n        this.flashcards = data;\r\n        this.updateCreationDateFlashcard(this.flashcards);\r\n      });\r\n  }\r\n\r\n  // Method to update the creation date format for a deck\r\n  updateCreationDateDeck(deck: IDeck): IDeck {\r\n    const datePart = deck.CreationDate.split('T')[0];\r\n    deck.CreationDate = datePart;\r\n    return deck;\r\n  }\r\n\r\n  // Method to update the creation date format for flashcards\r\n  updateCreationDateFlashcard(flashcards: IFlashcard[]): void {\r\n    flashcards.forEach(flashcard => {\r\n      const datePart = flashcard.CreationDate.split('T')[0];\r\n      flashcard.CreationDate = datePart;\r\n    });\r\n  }\r\n\r\n  // Method to navigate back based on folder existence\r\n  return() {\r\n    if (this.deck.FolderId == null) {\r\n      this._router.navigate([\"/library\"]);\r\n    } else {\r\n      this._router.navigate([\"/folder/\" + this.deck.FolderId]);\r\n    }\r\n  }\r\n\r\n  // Method to navigate to flashcard creation form\r\n  createFlashcard() {\r\n    this._router.navigate(['/flashcardform', 'create', this.deck.DeckId]).then(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n\r\n  // Lifecycle method called when the component is initialized\r\n  ngOnInit(): void {\r\n    // Subscribe to route parameters to get the deck ID and fetch data\r\n    this._route.params.subscribe(params => {\r\n      const id = this.deck.DeckId = + params[\"id\"];\r\n      this.getDeck(id);\r\n      this.getFlashcards(id);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}