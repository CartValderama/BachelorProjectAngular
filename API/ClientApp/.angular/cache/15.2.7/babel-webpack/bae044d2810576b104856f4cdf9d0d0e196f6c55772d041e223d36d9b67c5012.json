{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/elija/source/repos/BachelorProject/API/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/flashcard.service\";\nimport * as i3 from \"../services/deck.service\";\nimport * as i4 from \"@angular/common\";\nfunction FlashcardoneComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 33)(2, \"div\", 34)(3, \"a\", 35);\n    i0.ɵɵlistener(\"click\", function FlashcardoneComponent_div_40_Template_a_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const flashcard_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.checkFlashcard(flashcard_r1));\n    });\n    i0.ɵɵelementStart(4, \"div\", 36);\n    i0.ɵɵelement(5, \"span\", 37);\n    i0.ɵɵelementStart(6, \"span\", 38);\n    i0.ɵɵtext(7, \"Loading...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(8, \" Get Hint \");\n    i0.ɵɵelement(9, \"i\", 39);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 40)(11, \"span\", 41);\n    i0.ɵɵelement(12, \"i\", 42);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 43);\n    i0.ɵɵlistener(\"click\", function FlashcardoneComponent_div_40_Template_div_click_13_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.rotateCard($event));\n    });\n    i0.ɵɵelementStart(14, \"div\", 44)(15, \"div\", 45);\n    i0.ɵɵelement(16, \"i\", 46);\n    i0.ɵɵelementStart(17, \"p\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 47);\n    i0.ɵɵelement(20, \"i\", 48);\n    i0.ɵɵelementStart(21, \"p\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const flashcard_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", \"hintButton_\" + flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"status_\" + flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"id\", \"hintContainer_\" + flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"hint_\" + flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(flashcard_r1.Front);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(flashcard_r1.Back);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/deck/\", a1];\n};\nconst _c1 = function (a1) {\n  return [\"/flashcardone/\", a1];\n};\nconst _c2 = function (a1) {\n  return [\"/flashcardtwo/\", a1];\n};\nconst _c3 = function (a1) {\n  return [\"/flashcardthree/\", a1];\n};\nexport class FlashcardoneComponent {\n  constructor(_router, _route, _flashcardService, _deckService) {\n    this._router = _router;\n    this._route = _route;\n    this._flashcardService = _flashcardService;\n    this._deckService = _deckService;\n    this.decks = [];\n    this.deck = {\n      DeckId: 0,\n      DeckName: \"\",\n      DeckDescription: \"\",\n      CreationDate: \"\",\n      FolderId: 0\n    };\n    this.flashcards = [];\n    this.flashcard = {\n      FlashcardId: 0,\n      Front: \"\",\n      Back: \"\",\n      CreationDate: \"\",\n      DeckId: 0\n    };\n  }\n  // Function to update the CreationDate attribute to store only the date part\n  updateCreationDateDeck(deck) {\n    const datePart = deck.CreationDate.split('T')[0];\n    deck.CreationDate = datePart;\n    return deck;\n  }\n  getFlashcards(deckId) {\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\n    this._flashcardService.getFlashcardsByDeckId(deckId).subscribe(data => {\n      this.flashcards = this.shuffleFlashcard(data);\n    });\n  }\n  getDecks(folderId) {\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\n    this._deckService.getDecksByFolderId(folderId).subscribe(data => {\n      this.decks = data;\n      this.decks.forEach(deck => {\n        this.updateCreationDateDeck(deck);\n      });\n    });\n  }\n  getDeck(deckId) {\n    this._deckService.getDeckById(deckId).subscribe(data => {\n      this.deck = data;\n      this.updateCreationDateDeck(this.deck);\n    });\n  }\n  shuffleFlashcard(array) {\n    return array.slice().sort(() => Math.random() - 0.5);\n  }\n  rotateCard(event) {\n    const carousel = document.getElementById('flashcard-one');\n    const element = event.currentTarget;\n    element.classList.toggle('flipped');\n    carousel.addEventListener('slid.bs.carousel', function () {\n      element.classList.remove('flipped');\n    });\n  }\n  updateButtonsState() {\n    const prevButton = document.getElementById('prev');\n    const nextButton = document.getElementById('next');\n    const restartButton = document.getElementById('restart');\n    const progressBar1 = document.getElementById('progress-bar1');\n    const carouselItems = document.querySelectorAll('.carousel-item');\n    let currentIndex;\n    let isEndReached;\n    currentIndex = Array.from(carouselItems).indexOf(document.querySelector('.carousel-item.active'));\n    // Disable the \"Previous\" button if on the first flashcard\n    if (prevButton) {\n      prevButton.disabled = currentIndex === 0;\n    }\n    // Check if on the last flashcard\n    if (currentIndex === carouselItems.length - 1) {\n      if (nextButton) {\n        nextButton.disabled = true;\n      }\n      isEndReached = true;\n      if (restartButton) {\n        restartButton.style.display = 'block'; // Show the restart button\n      }\n    } else {\n      if (nextButton) {\n        nextButton.disabled = false;\n      }\n      isEndReached = false;\n      if (restartButton) {\n        restartButton.style.display = 'none'; // Hide the restart button\n      }\n    }\n    // Update the progress bar\n    // Calculate the progress while excluding the first carousel item\n    const progress1 = currentIndex / (carouselItems.length - 1) * 100;\n    if (progressBar1) {\n      progressBar1.style.width = progress1 + '%';\n      progressBar1.setAttribute('aria-valuenow', progress1.toString());\n    }\n  }\n  restartCarousel() {\n    const carousel = document.getElementById('flashcard-one');\n    const carouselItems = document.querySelectorAll('.carousel-item');\n    let isEndReached;\n    isEndReached = false;\n    // Remove 'active' class from all carousel items\n    carouselItems.forEach(item => {\n      item.classList.remove('active');\n    });\n    // Add 'active' class to the first carousel item\n    carouselItems[0].classList.add('active');\n    // Manually trigger the slid event to update the button state\n    carousel?.dispatchEvent(new Event('slid.bs.carousel'));\n    // Update the button state\n    this.updateButtonsState();\n  }\n  return() {\n    if (this.deck.FolderId == null) {\n      this._router.navigate([\"/library\"]);\n    } else {\n      this._router.navigate([\"/folder/\" + this.deck.FolderId]);\n    }\n  }\n  checkFlashcard(flashcard) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.flashcard = flashcard;\n      const status = document.getElementById(\"status_\" + _this.flashcard.FlashcardId);\n      const hintButton = document.getElementById('hintButton_' + _this.flashcard.FlashcardId);\n      if (status) {\n        status.style.display = \"inline\";\n        hintButton.disabled = true;\n      }\n      const description = yield _this.createHint(_this.flashcard.Front, _this.flashcard.Back);\n      if (hintButton) {\n        hintButton.hidden = true;\n      }\n      const hintContainer = document.getElementById('hintContainer_' + _this.flashcard.FlashcardId);\n      if (hintContainer) {\n        hintContainer.hidden = false;\n      }\n      const hint = document.getElementById('hint_' + _this.flashcard.FlashcardId);\n      if (hint) {\n        hint.setAttribute('data-tip', \"Hint from ChatGPT: \" + description);\n      }\n    })();\n  }\n  createHint(front, preWrittenBack) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const hintButton = document.getElementById('hintButton_' + _this2.flashcard.FlashcardId);\n      // const imageDescription = \"\";\n      // Hard coding the API key for easier access\n      const API_KEY = \"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\";\n      // PUT THE API KEY HERE\n      const response1 = yield fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n          model: \"gpt-3.5-turbo\",\n          messages: [{\n            role: \"system\",\n            content: `Given the front: ${front}, and the provided back: ${preWrittenBack}, could you offer a hint that aligns with the provided back? The hint should be associative and descriptive, helping to understand or justify the given back, even if it deviates from the factual back. The hint should be insightful yet subtle, preserving the learning process`\n          }],\n          temperature: 0.8,\n          max_tokens: 50,\n          frequency_penalty: 2.0,\n          presence_penalty: 2.0\n        })\n      });\n      const data = yield response1.json();\n      setInterval(() => {\n        hintButton.disabled = false;\n      }, 3000);\n      const status = document.getElementById(\"status_\" + _this2.flashcard.FlashcardId);\n      if (status) {\n        status.style.display = \"none\";\n      }\n      try {\n        // cleaning the response from the api and storing them in variables for later use\n        const description = data.choices[0].message.content;\n        console.log(description);\n        return description;\n      } catch {\n        console.log(\"Something went wrong in createHint()\");\n      }\n    })();\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      const id = this.deck.DeckId = +params[\"id\"];\n      this.getDeck(id);\n      this.getFlashcards(id);\n    });\n    this.updateButtonsState();\n    const carousel = document.getElementById('flashcard-one');\n    if (carousel) {\n      carousel.addEventListener('slid.bs.carousel', this.updateButtonsState);\n    }\n  }\n}\nFlashcardoneComponent.ɵfac = function FlashcardoneComponent_Factory(t) {\n  return new (t || FlashcardoneComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FlashcardService), i0.ɵɵdirectiveInject(i3.DeckService));\n};\nFlashcardoneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlashcardoneComponent,\n  selectors: [[\"app-flashcard-flashcardform\"]],\n  decls: 53,\n  vars: 16,\n  consts: [[1, \"container\", 2, \"margin-bottom\", \"10rem\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-end\", \"mt-5\"], [1, \"btn\", \"btn-secondary\", \"btn-block\", \"mb-1\", 3, \"click\"], [1, \"fa-solid\", \"fa-arrow-left-long\"], [1, \"m-0\"], [1, \"link-secondary\", \"text-decoration-none\", \"ms-2\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-gear\", \"fa-2x\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [\"role\", \"group\", \"aria-label\", \"Basic example\", 1, \"btn-group\"], [1, \"btn\", \"btn-outline-secondary\", \"active\", \"d-flex\", \"align-items-center\", 3, \"routerLink\"], [\"src\", \"assets/img/type1.png\", 2, \"width\", \"2rem\", \"margin-right\", \"5px\"], [1, \"m-0\", \"d-none\", \"d-md-block\"], [1, \"btn\", \"btn-outline-secondary\", \"d-flex\", \"align-items-center\", 3, \"routerLink\"], [\"src\", \"assets/img/type2.png\", 2, \"width\", \"2.5rem\"], [\"src\", \"assets/img/type3.png\", 2, \"width\", \"2rem\"], [1, \"instruction\", \"mt-4\", \"p-3\"], [1, \"container\", \"mt-3\", \"mb-4\"], [1, \"progress\"], [\"id\", \"progress-bar1\", \"role\", \"progressbar\", \"aria-valuenow\", \"0\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"progress-bar-animated\", \"bg-success\", 2, \"width\", \"0%\"], [1, \"carousel-container\", \"shadow\"], [\"id\", \"flashcard-one\", 1, \"carousel\", \"slide\", \"h-100\"], [1, \"carousel-inner\", \"h-100\"], [1, \"carousel-item\", \"active\"], [1, \"h-100\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"carousel-item\"], [\"id\", \"restart\", \"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 2, \"width\", \"8rem\", 3, \"click\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-evenly\", \"mt-4\"], [\"id\", \"prev\", \"type\", \"button\", \"data-bs-target\", \"#flashcard-one\", \"data-bs-slide\", \"prev\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"fa-solid\", \"fa-arrow-left\"], [1, \"fa-solid\", \"fa-crown\", \"fa-2x\"], [\"id\", \"next\", \"type\", \"button\", \"data-bs-target\", \"#flashcard-one\", \"data-bs-slide\", \"next\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"fa-solid\", \"fa-arrow-right\"], [1, \"carousel-item\", 2, \"word-break\", \"break-word\"], [1, \"wrap\", \"d-flex\"], [\"role\", \"button\", 1, \"hint-btn\", \"link-dark\", \"text-decoration-none\", 3, \"id\", \"click\"], [2, \"display\", \"none\", 3, \"id\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"sr-only\"], [1, \"fa-solid\", \"fa-circle-front\"], [\"hidden\", \"\", 1, \"wrap\", 3, \"id\"], [\"tabindex\", \"1\", 1, \"tool\", \"d-flex\", 3, \"id\"], [1, \"fas\", \"fa-info-circle\"], [1, \"flip-card\", 3, \"click\"], [1, \"flip-card-inner\"], [1, \"flip-card-front\", \"d-flex\", \"flex-column\", \"justify-content-center\"], [1, \"fa-solid\", \"fa-clipboard-front\", \"fa-2x\", \"mb-2\"], [1, \"flip-card-back\", \"d-flex\", \"flex-column\", \"justify-content-center\"], [1, \"fa-solid\", \"fa-comment-dots\", \"fa-2x\", \"mb-2\"]],\n  template: function FlashcardoneComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function FlashcardoneComponent_Template_a_click_2_listener() {\n        return ctx.return();\n      });\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h1\", 4);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 5);\n      i0.ɵɵelement(7, \"i\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"hr\");\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"a\", 9);\n      i0.ɵɵelement(12, \"img\", 10);\n      i0.ɵɵelementStart(13, \"p\", 11);\n      i0.ɵɵtext(14, \"Default\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"a\", 12);\n      i0.ɵɵelement(16, \"img\", 13);\n      i0.ɵɵelementStart(17, \"p\", 11);\n      i0.ɵɵtext(18, \"Matching\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"a\", 12);\n      i0.ɵɵelement(20, \"img\", 14);\n      i0.ɵɵelementStart(21, \"p\", 11);\n      i0.ɵɵtext(22, \"GPT-Quiz\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 15)(24, \"p\");\n      i0.ɵɵtext(25, \"Flip the flashcard to reveal the Back \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 16)(27, \"div\", 17);\n      i0.ɵɵelement(28, \"div\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 19)(30, \"div\", 20)(31, \"div\", 21)(32, \"div\", 22)(33, \"div\", 23)(34, \"h1\");\n      i0.ɵɵtext(35, \"Start\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"p\");\n      i0.ɵɵtext(37);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"p\");\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(40, FlashcardoneComponent_div_40_Template, 23, 6, \"div\", 24);\n      i0.ɵɵelementStart(41, \"div\", 25)(42, \"div\", 23)(43, \"h1\");\n      i0.ɵɵtext(44, \"Finito!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function FlashcardoneComponent_Template_button_click_45_listener() {\n        return ctx.restartCarousel();\n      });\n      i0.ɵɵtext(46, \" Restart \");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(47, \"div\", 27)(48, \"button\", 28);\n      i0.ɵɵelement(49, \"i\", 29);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"i\", 30);\n      i0.ɵɵelementStart(51, \"button\", 31);\n      i0.ɵɵelement(52, \"i\", 32);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.deck.DeckName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, ctx.deck.DeckId));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c1, ctx.deck.DeckId));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(12, _c2, ctx.deck.DeckId));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(14, _c3, ctx.deck.DeckId));\n      i0.ɵɵadvance(18);\n      i0.ɵɵtextInterpolate1(\"Introduction card of \", ctx.deck.DeckName, \" Deck\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Date of Creation: \", ctx.deck.CreationDate, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.flashcards);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FlashcardoneComponent","constructor","_router","_route","_flashcardService","_deckService","DeckId","DeckName","DeckDescription","CreationDate","FolderId","FlashcardId","Front","Back","updateCreationDateDeck","deck","datePart","split","getFlashcards","deckId","getFlashcardsByDeckId","subscribe","data","flashcards","shuffleFlashcard","getDecks","folderId","getDecksByFolderId","decks","forEach","getDeck","getDeckById","array","slice","sort","Math","random","rotateCard","event","carousel","document","getElementById","element","currentTarget","classList","toggle","addEventListener","remove","updateButtonsState","prevButton","nextButton","restartButton","progressBar1","carouselItems","querySelectorAll","currentIndex","isEndReached","Array","from","indexOf","querySelector","disabled","length","style","display","progress1","width","setAttribute","toString","restartCarousel","item","add","dispatchEvent","Event","return","navigate","checkFlashcard","flashcard","status","hintButton","description","createHint","hidden","hintContainer","hint","front","preWrittenBack","API_KEY","response1","fetch","method","headers","Authorization","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","frequency_penalty","presence_penalty","json","setInterval","choices","message","console","log","ngOnInit","params","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\BachelorProject\\API\\ClientApp\\src\\app\\flashcard\\flashcardone.component.html","C:\\Users\\elija\\source\\repos\\BachelorProject\\API\\ClientApp\\src\\app\\flashcard\\flashcardone.component.ts"],"sourcesContent":["<section class=\"container\" style=\"margin-bottom: 10rem\">\r\n  <!-- Deck navigation and actions -->\r\n  <div class=\"d-flex justify-content-between align-items-end mt-5\">\r\n    <!-- Return to folder dashboard button -->\r\n    <a class=\"btn btn-secondary btn-block mb-1\"\r\n       (click)=\"return()\">\r\n      <i class=\"fa-solid fa-arrow-left-long\"></i>\r\n    </a>\r\n    <!-- Deck title -->\r\n    <h1 class=\"m-0\">{{deck.DeckName}}</h1>\r\n    <!-- Deck settings button -->\r\n    <a class=\"link-secondary text-decoration-none ms-2\"\r\n       [routerLink]=\"['/deck/', deck.DeckId]\">\r\n      <i class=\"fa-solid fa-gear fa-2x\"></i>\r\n    </a>\r\n  </div>\r\n  <hr />\r\n  <!-- Flashcard type selection buttons -->\r\n  <div class=\"d-flex justify-content-center mt-5\">\r\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n      <!-- Flashcard type one button -->\r\n      <a class=\"btn btn-outline-secondary active d-flex align-items-center\"\r\n         [routerLink]=\"['/flashcardone/', deck.DeckId]\">\r\n        <img src=\"assets/img/type1.png\" style=\"width: 2rem; margin-right: 5px\"/>\r\n        <p class=\"m-0 d-none d-md-block\">Default</p>\r\n      </a>\r\n      <!-- Flashcard type two button -->\r\n      <a class=\"btn btn-outline-secondary d-flex align-items-center\"\r\n         [routerLink]=\"['/flashcardtwo/', deck.DeckId]\">\r\n        <img src=\"assets/img/type2.png\" style=\"width: 2.5rem;\" />\r\n        <p class=\"m-0 d-none d-md-block\">Matching</p>\r\n      </a>\r\n      <a class=\"btn btn-outline-secondary d-flex align-items-center\"\r\n         [routerLink]=\"['/flashcardthree/', deck.DeckId]\">\r\n        <img src=\"assets/img/type3.png\" style=\"width: 2rem;\"/>\r\n        <p class=\"m-0 d-none d-md-block\">GPT-Quiz</p>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <!-- Instructions -->\r\n  <div class=\"instruction mt-4 p-3\">\r\n    <p>Flip the flashcard to reveal the Back </p>\r\n  </div>\r\n  <!-- Progress bar -->\r\n  <div class=\"container mt-3 mb-4\">\r\n    <div class=\"progress\">\r\n      <div id=\"progress-bar1\" class=\"progress-bar progress-bar-striped progress-bar-animated bg-success\" role=\"progressbar\" style=\"width: 0%\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"carousel-container shadow\">\r\n    <div id=\"flashcard-one\" class=\"carousel slide h-100\">\r\n      <div class=\"carousel-inner h-100\">\r\n        <div class=\"carousel-item active\">\r\n          <div class=\"h-100 d-flex flex-column align-items-center justify-content-center\">\r\n            <h1>Start</h1>\r\n            <p>Introduction card of {{deck.DeckName}} Deck</p>\r\n            <p>Date of Creation: {{deck.CreationDate}}</p>\r\n          </div>\r\n        </div>\r\n        <div *ngFor=\"let flashcard of flashcards\">\r\n          <div class=\"carousel-item\" style=\"word-break: break-word\">\r\n            <div class=\"wrap d-flex\">\r\n              <a class=\"hint-btn link-dark text-decoration-none\" role=\"button\" [id]=\"'hintButton_' + flashcard.FlashcardId\" (click)=\"checkFlashcard(flashcard)\">\r\n                <div [id]=\"'status_' + flashcard.FlashcardId\" style=\"display: none\">\r\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n                Get Hint <i class=\"fa-solid fa-circle-front\"></i>\r\n              </a>\r\n            </div>\r\n            <div class=\"wrap\" [id]=\"'hintContainer_' + flashcard.FlashcardId\" hidden>\r\n              <span [id]=\"'hint_' + flashcard.FlashcardId\" class=\"tool d-flex\" [attr.data-tip]=\"\" tabindex=\"1\">\r\n                <i class=\"fas fa-info-circle\"></i>\r\n              </span>\r\n            </div>\r\n            <div class=\"flip-card\" (click)=\"rotateCard($event)\">\r\n              <div class=\"flip-card-inner\">\r\n                <div class=\"flip-card-front d-flex flex-column justify-content-center\">\r\n                  <i class=\"fa-solid fa-clipboard-front fa-2x mb-2\"></i>\r\n                  <p>{{ flashcard.Front }}</p>\r\n                </div>\r\n                <div class=\"flip-card-back d-flex flex-column justify-content-center\">\r\n                  <i class=\"fa-solid fa-comment-dots fa-2x mb-2\"></i>\r\n                  <p>{{ flashcard.Back }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <div class=\"h-100 d-flex flex-column align-items-center justify-content-center\">\r\n            <h1>Finito!</h1>\r\n            <button id=\"restart\" class=\"btn btn-outline-secondary\" style=\"width:8rem;\" type=\"button\" (click)=\"restartCarousel()\">\r\n              Restart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Navigation buttons for the carousel -->\r\n  <div class=\"d-flex align-items-center justify-content-evenly mt-4\">\r\n    <button id=\"prev\" class=\"btn btn-outline-secondary\" type=\"button\"\r\n            data-bs-target=\"#flashcard-one\" data-bs-slide=\"prev\">\r\n      <i class=\"fa-solid fa-arrow-left\"></i>\r\n    </button>\r\n    <i class=\"fa-solid fa-crown fa-2x\"></i>\r\n    <button id=\"next\" class=\"btn btn-outline-secondary\" type=\"button\"\r\n            data-bs-target=\"#flashcard-one\" data-bs-slide=\"next\">\r\n      <i class=\"fa-solid fa-arrow-right\"></i>\r\n    </button>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IDeck } from \"../models/deck\";\r\nimport { IFlashcard } from \"../models/flashcard\";\r\nimport { FlashcardService } from \"../services/flashcard.service\";\r\nimport { DeckService } from \"../services/deck.service\";\r\n\r\n@Component({\r\n  selector: \"app-flashcard-flashcardform\",\r\n  templateUrl: \"./flashcardone.component.html\"\r\n})\r\n\r\nexport class FlashcardoneComponent implements OnInit {\r\n  decks: IDeck[] = [];\r\n  deck: IDeck = {\r\n    DeckId: 0,\r\n    DeckName: \"\",\r\n    DeckDescription: \"\",\r\n    CreationDate: \"\",\r\n    FolderId: 0\r\n  };\r\n  flashcards: IFlashcard[] = []\r\n  flashcard: IFlashcard = {\r\n    FlashcardId: 0,\r\n    Front: \"\",\r\n    Back: \"\",\r\n    CreationDate: \"\",\r\n    DeckId: 0\r\n  }\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _flashcardService: FlashcardService,\r\n    private _deckService: DeckService) {\r\n  }\r\n\r\n  // Function to update the CreationDate attribute to store only the date part\r\n  updateCreationDateDeck(deck: IDeck): IDeck {\r\n    const datePart = deck.CreationDate.split('T')[0];\r\n    deck.CreationDate = datePart;\r\n    return deck;\r\n  }\r\n\r\n  getFlashcards(deckId: number): void {\r\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\r\n    this._flashcardService.getFlashcardsByDeckId(deckId)\r\n      .subscribe(data => { // subscribe() used to receive the data when the response is received\r\n        this.flashcards = this.shuffleFlashcard(data);\r\n      });\r\n  }\r\n\r\n  getDecks(folderId: number): void {\r\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\r\n    this._deckService.getDecksByFolderId(folderId)\r\n      .subscribe(data => { // subscribe() used to receive the data when the response is received\r\n        this.decks = data;\r\n        this.decks.forEach(deck => {\r\n          this.updateCreationDateDeck(deck)\r\n        })\r\n      });\r\n  }\r\n\r\n  getDeck(deckId: number): void {\r\n    this._deckService.getDeckById(deckId)\r\n      .subscribe(data => {\r\n        this.deck = data;\r\n        this.updateCreationDateDeck(this.deck);\r\n      })\r\n  }\r\n\r\n  shuffleFlashcard<T>(array: T[]): T[] {\r\n    return array.slice().sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  rotateCard(event: MouseEvent): void {\r\n    const carousel = document.getElementById('flashcard-one') as HTMLElement;\r\n    const element = event.currentTarget as HTMLDivElement;\r\n    element.classList.toggle('flipped');\r\n    carousel.addEventListener('slid.bs.carousel', function () {\r\n      element.classList.remove('flipped');\r\n    });\r\n  }\r\n\r\n\r\n\r\n  updateButtonsState() {\r\n    const prevButton = document.getElementById('prev') as HTMLButtonElement;\r\n    const nextButton = document.getElementById('next') as HTMLButtonElement;\r\n    const restartButton = document.getElementById('restart') as HTMLElement;\r\n    const progressBar1 = document.getElementById('progress-bar1') as HTMLElement;\r\n    const carouselItems = document.querySelectorAll('.carousel-item') as NodeListOf<HTMLElement>;\r\n\r\n    let currentIndex: number;\r\n    let isEndReached: boolean;\r\n    currentIndex = Array.from(carouselItems).indexOf(document.querySelector('.carousel-item.active') as HTMLElement);\r\n\r\n    // Disable the \"Previous\" button if on the first flashcard\r\n    if (prevButton) {\r\n      prevButton.disabled = currentIndex === 0;\r\n    }\r\n\r\n    // Check if on the last flashcard\r\n    if (currentIndex === carouselItems.length - 1) {\r\n      if (nextButton) {\r\n        nextButton.disabled = true;\r\n      }\r\n      isEndReached = true;\r\n      if (restartButton) {\r\n        restartButton.style.display = 'block'; // Show the restart button\r\n      }\r\n    } else {\r\n      if (nextButton) {\r\n        nextButton.disabled = false;\r\n      }\r\n      isEndReached = false;\r\n      if (restartButton) {\r\n        restartButton.style.display = 'none'; // Hide the restart button\r\n      }\r\n    }\r\n\r\n    // Update the progress bar\r\n    // Calculate the progress while excluding the first carousel item\r\n    const progress1 = ((currentIndex) / (carouselItems.length - 1)) * 100;\r\n    if (progressBar1) {\r\n      progressBar1.style.width = progress1 + '%';\r\n      progressBar1.setAttribute('aria-valuenow', progress1.toString());\r\n    }\r\n  }\r\n\r\n  restartCarousel() {\r\n    const carousel = document.getElementById('flashcard-one') as HTMLElement;\r\n    const carouselItems = document.querySelectorAll('.carousel-item') as NodeListOf<HTMLElement>;\r\n    let isEndReached: boolean;\r\n    isEndReached = false;\r\n\r\n    // Remove 'active' class from all carousel items\r\n    carouselItems.forEach(item => {\r\n      item.classList.remove('active');\r\n    });\r\n\r\n    // Add 'active' class to the first carousel item\r\n    carouselItems[0].classList.add('active');\r\n\r\n    // Manually trigger the slid event to update the button state\r\n    carousel?.dispatchEvent(new Event('slid.bs.carousel'));\r\n\r\n    // Update the button state\r\n    this.updateButtonsState();\r\n  }\r\n\r\n  return() {\r\n    if (this.deck.FolderId == null) {\r\n      this._router.navigate([\"/library\"]);\r\n    } else {\r\n      this._router.navigate([\"/folder/\" + this.deck.FolderId]);\r\n    }\r\n  }\r\n\r\n  async checkFlashcard(flashcard: IFlashcard) {\r\n    this.flashcard = flashcard;\r\n    const status = document.getElementById(\"status_\" + this.flashcard.FlashcardId) as HTMLElement;\r\n    const hintButton = document.getElementById('hintButton_' + this.flashcard.FlashcardId) as HTMLButtonElement;\r\n    if (status) {\r\n      status.style.display = \"inline\";\r\n      hintButton.disabled = true\r\n    }\r\n    const description = await this.createHint(this.flashcard.Front, this.flashcard.Back);\r\n\r\n    if (hintButton) {\r\n      hintButton.hidden = true;\r\n    }\r\n    const hintContainer = document.getElementById('hintContainer_' + this.flashcard.FlashcardId) as HTMLElement;\r\n    if (hintContainer) {\r\n      hintContainer.hidden = false;\r\n    }\r\n    const hint = document.getElementById('hint_' + this.flashcard.FlashcardId) as HTMLElement;\r\n    if (hint) {\r\n      hint.setAttribute('data-tip', \"Hint from ChatGPT: \" + description);\r\n    }\r\n  }\r\n\r\n  async createHint(front: string, preWrittenBack: string) {\r\n    const hintButton = document.getElementById('hintButton_' + this.flashcard.FlashcardId) as HTMLButtonElement;\r\n    // const imageDescription = \"\";\r\n    // Hard coding the API key for easier access\r\n    const API_KEY = \"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\";\r\n    // PUT THE API KEY HERE\r\n    const response1 = await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${API_KEY}`,\r\n        \"Content-Type\": 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        model: \"gpt-3.5-turbo\",\r\n        messages: [\r\n          {\r\n            role: \"system\",\r\n            content: `Given the front: ${front}, and the provided back: ${preWrittenBack}, could you offer a hint that aligns with the provided back? The hint should be associative and descriptive, helping to understand or justify the given back, even if it deviates from the factual back. The hint should be insightful yet subtle, preserving the learning process`,\r\n          }\r\n        ],\r\n        temperature: 0.8,\r\n        max_tokens: 50,\r\n        frequency_penalty: 2.0,\r\n        presence_penalty: 2.0,\r\n      }),\r\n    });\r\n    const data = await response1.json();\r\n    setInterval(() => {\r\n      hintButton.disabled = false;\r\n    }, 3000);\r\n    const status = document.getElementById(\"status_\" + this.flashcard.FlashcardId) as HTMLElement;\r\n    if (status) {\r\n      status.style.display = \"none\";\r\n\r\n    }\r\n    try {\r\n      // cleaning the response from the api and storing them in variables for later use\r\n      const description = data.choices[0].message.content;\r\n      console.log(description);\r\n      return description;\r\n    } catch {\r\n      console.log(\"Something went wrong in createHint()\");\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      const id = this.deck.DeckId = + params[\"id\"]\r\n      this.getDeck(id);\r\n      this.getFlashcards(id);\r\n    })\r\n    this.updateButtonsState();\r\n    const carousel = document.getElementById('flashcard-one') as HTMLElement;\r\n    if (carousel) {\r\n      carousel.addEventListener('slid.bs.carousel', this.updateButtonsState);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}