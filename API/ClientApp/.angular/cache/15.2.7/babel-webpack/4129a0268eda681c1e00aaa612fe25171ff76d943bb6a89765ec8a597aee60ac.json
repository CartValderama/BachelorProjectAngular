{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/folder.service\";\nimport * as i3 from \"../services/deck.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/deck\", a1];\n};\nconst _c1 = function (a1) {\n  return [\"/flashcardone\", a1];\n};\nfunction FolderComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 16)(2, \"div\", 39)(3, \"div\", 40);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"a\", 41);\n    i0.ɵɵelement(6, \"i\", 42);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 43)(8, \"p\", 44);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 45);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"a\", 41);\n    i0.ɵɵtext(13, \" Play\");\n    i0.ɵɵelement(14, \"i\", 46);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const deck_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", deck_r1.DeckName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, deck_r1.DeckId));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(deck_r1.DeckDescription);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", deck_r1.CreationDate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c1, deck_r1.DeckId));\n  }\n}\nconst _c2 = function () {\n  return [\"/library\"];\n};\nconst _c3 = function (a2) {\n  return [\"/folderform\", \"update\", a2];\n};\nconst _c4 = function (a2) {\n  return [\"/deckform\", \"create\", a2];\n};\nexport class FolderComponent {\n  // injecting the HttpClient service into the component\n  constructor(_router, _folderService, _deckService, _route) {\n    this._router = _router;\n    this._folderService = _folderService;\n    this._deckService = _deckService;\n    this._route = _route;\n    this.viewTitle = \"Table\";\n    this._listFilter = \"\";\n    this.folders = [];\n    this.decks = [];\n    this.folder = {\n      FolderId: 0,\n      FolderName: \"\",\n      CreationDate: \"\"\n    };\n    this.filteredDecks = [];\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    this.filteredDecks = this.performFilterDeck(value);\n  }\n  // Function to update the CreationDate attribute to store only the date part\n  updateCreationDateDeck(deck) {\n    const datePart = deck.CreationDate.split('T')[0];\n    deck.CreationDate = datePart;\n    return deck;\n  }\n  updateCreationDateFolder(folder) {\n    const datePart = folder.CreationDate.split('T')[0];\n    folder.CreationDate = datePart;\n    return folder;\n  }\n  deleteFolder() {\n    this._folderService.deleteItem(this.folder.FolderId).subscribe({\n      next: response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate([\"/library\"]);\n        }\n      },\n      error: error => {\n        console.log(\"Error deleting item:\", error);\n      }\n    });\n  }\n  getFolder(folderId) {\n    this._folderService.getFolderById(folderId).subscribe(data => {\n      console.log(data);\n      this.folder = data;\n      this.updateCreationDateFolder(this.folder);\n    });\n  }\n  getDecks(folderId) {\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\n    this._deckService.getDecksByFolderId(folderId).subscribe(data => {\n      this.decks = data;\n      this.filteredDecks = this.decks;\n      this.decks.forEach(deck => {\n        this.updateCreationDateDeck(deck);\n      });\n    });\n  }\n  performFilterDeck(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.decks.filter(deck => deck.DeckName.toLocaleLowerCase().includes(filterBy));\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      const id = this.folder.FolderId = +params[\"id\"];\n      this.getFolder(id);\n      this.getDecks(id);\n    });\n  }\n}\nFolderComponent.ɵfac = function FolderComponent_Factory(t) {\n  return new (t || FolderComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FolderService), i0.ɵɵdirectiveInject(i3.DeckService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nFolderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FolderComponent,\n  selectors: [[\"app-folder-component\"]],\n  decls: 54,\n  vars: 16,\n  consts: [[1, \"container\", \"mb-5\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-end\", \"mt-5\"], [1, \"btn\", \"btn-secondary\", \"btn-block\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-arrow-left-long\"], [1, \"d-flex\", \"justify-content-end\", \"align-items-start\"], [1, \"m-0\"], [1, \"link-secondary\", \"text-decoration-none\", \"ms-2\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#deletefolder\", 1, \"link-secondary\", \"text-decoration-none\", \"ms-3\"], [1, \"fa-solid\", \"fa-trash\", \"fa-2x\"], [1, \"w-50\", \"mt-4\", \"mb-5\", 2, \"max-width\", \"15rem\"], [1, \"input-group\"], [\"type\", \"search\", \"placeholder\", \"search\", 1, \"form-control\", \"border\", \"rounded-pill\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-even\", \"align-items-baseline\", \"flex-wrap\", \"mt-5\", \"mb-4\", 2, \"word-break\", \"break-word\"], [1, \"m-2\", \"ms-0\", \"me-5\"], [1, \"row\", \"row-cols-1\", \"row-cols-md-3\", \"g-5\", \"p-2\"], [1, \"col\"], [1, \"btn\", \"btn-outline-success\", \"text-decoration-none\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"shadow-md\", 2, \"height\", \"15rem\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-plus\", \"fa-5x\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"deletefolder\", \"role\", \"dialog\", \"data-bs-keyboard\", \"false\", \"data-bs-backdrop\", \"static\", \"aria-labelledby\", \"deletemodal\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [1, \"modal-body\"], [1, \"container-sm\", \"d-flex\", \"bg-white\", \"justify-content-between\", \"ps-5\", \"pe-5\"], [1, \"d-flex\", \"flex-column\"], [1, \"text-danger-emphasis\"], [1, \"fa-solid\", \"fa-folder-closed\", \"me-2\"], [1, \"fa-regular\", \"fa-calendar-days\", \"me-2\"], [1, \"fa-solid\", \"fa-tag\", \"me-2\"], [1, \"text-danger\"], [1, \"w-50\", \"delete-folder\", \"d-none\", \"d-lg-block\"], [1, \"modal-footer\", \"d-flex\", \"justify-content-between\"], [\"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [1, \"fa-solid\", \"fa-arrow-rotate-left\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\"], [1, \"card\", 2, \"height\", \"15rem\", \"background-color\", \"#BCEAD5\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-light\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-magnifying-glass\"], [1, \"card-body\", \"d-flex\", \"flex-column\", \"justify-content-evenly\", \"overflow-hidden\"], [1, \"card-text\"], [1, \"card-footer\", \"text-muted\", \"d-flex\", \"justify-content-between\"], [1, \"fa-solid\", \"fa-play\", \"ms-2\", 2, \"color\", \"green\"]],\n  template: function FolderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h1\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"a\", 6);\n      i0.ɵɵelement(8, \"i\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"a\", 8);\n      i0.ɵɵelement(10, \"i\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"hr\");\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11)(14, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function FolderComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 13)(16, \"h2\", 14);\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 15)(21, \"div\", 16)(22, \"a\", 17);\n      i0.ɵɵelement(23, \"i\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(24, FolderComponent_div_24_Template, 15, 9, \"div\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 20)(26, \"div\", 21)(27, \"div\", 22)(28, \"div\", 23)(29, \"h5\", 24);\n      i0.ɵɵtext(30, \"Delete Folder\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 25)(32, \"div\", 26)(33, \"div\", 27)(34, \"div\")(35, \"div\", 28)(36, \"p\");\n      i0.ɵɵelement(37, \"i\", 29);\n      i0.ɵɵtext(38);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"p\");\n      i0.ɵɵelement(40, \"i\", 30);\n      i0.ɵɵtext(41);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"p\");\n      i0.ɵɵelement(43, \"i\", 31);\n      i0.ɵɵtext(44);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(45, \"hr\");\n      i0.ɵɵelementStart(46, \"h6\", 32);\n      i0.ɵɵtext(47, \"Are you sure that you want to delete this folder?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(48, \"div\", 33);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 34)(50, \"a\", 35);\n      i0.ɵɵelement(51, \"i\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"button\", 37);\n      i0.ɵɵlistener(\"click\", function FolderComponent_Template_button_click_52_listener() {\n        return ctx.deleteFolder();\n      });\n      i0.ɵɵelement(53, \"i\", 38);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c2));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Folder \", ctx.folder.FolderId, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(12, _c3, ctx.folder.FolderId));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.folder.FolderName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.folder.FolderDescription);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(14, _c4, ctx.folder.FolderId));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredDecks);\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate1(\" Folder ID: \", ctx.folder.FolderId, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Date Created: \", ctx.folder.CreationDate, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Folder Name: \", ctx.folder.FolderName, \"\");\n    }\n  },\n  dependencies: [i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i1.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FolderComponent","constructor","_router","_folderService","_deckService","_route","FolderId","FolderName","CreationDate","listFilter","_listFilter","value","filteredDecks","performFilterDeck","updateCreationDateDeck","deck","datePart","split","updateCreationDateFolder","folder","deleteFolder","deleteItem","subscribe","next","response","success","console","log","message","navigate","error","getFolder","folderId","getFolderById","data","getDecks","getDecksByFolderId","decks","forEach","filterBy","toLocaleLowerCase","filter","DeckName","includes","ngOnInit","params","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\BachelorProject\\API\\ClientApp\\src\\app\\folder\\folder.component.html","C:\\Users\\elija\\source\\repos\\BachelorProject\\API\\ClientApp\\src\\app\\folder\\folder.component.ts"],"sourcesContent":["<section class=\"container mb-5\">\r\n  <!-- Container for the folder details section -->\r\n  <div class=\"d-flex justify-content-between align-items-end mt-5\">\r\n    <!-- Return to Library button -->\r\n    <a class=\"btn btn-secondary btn-block\"\r\n       [routerLink]=\"['/library']\">\r\n      <i class=\"fa-solid fa-arrow-left-long\"></i>\r\n    </a>\r\n    <!-- Folder title and options -->\r\n    <div class=\"d-flex justify-content-end align-items-start\">\r\n      <!-- Folder title -->\r\n      <h1 class=\"m-0\">Folder {{folder.FolderId}}</h1>\r\n      <!-- Edit Folder button -->\r\n      <a class=\"link-secondary text-decoration-none ms-2\"\r\n         [routerLink]=\"['/folderform', 'update', folder.FolderId]\">\r\n        <i class=\"fa-solid fa-pen-to-square\"></i>\r\n      </a>\r\n    </div>\r\n    <!-- Delete Folder button -->\r\n    <a class=\"link-secondary text-decoration-none ms-3\"\r\n       data-bs-toggle=\"modal\"\r\n       data-bs-target=\"#deletefolder\">\r\n      <i class=\"fa-solid fa-trash fa-2x\"></i>\r\n    </a>\r\n  </div>\r\n  <hr />\r\n  <div class=\"w-50 mt-4 mb-5\" style=\"max-width: 15rem;\">\r\n    <div class=\"input-group\">\r\n      <input class=\"form-control border rounded-pill\"\r\n             type=\"search\"\r\n             placeholder=\"search\"\r\n             [(ngModel)]=\"listFilter\" />\r\n    </div>\r\n  </div>\r\n  <!-- Folder details -->\r\n  <div class=\"d-flex justify-content-even align-items-baseline flex-wrap mt-5 mb-4\" style=\"word-break:break-word\">\r\n    <!-- Folder name and description -->\r\n    <h2 class=\"m-2 ms-0 me-5\">{{folder.FolderName}}</h2>\r\n    <p>{{folder.FolderDescription}}</p>\r\n  </div>\r\n  <!-- list decks -->\r\n  <div class=\"row row-cols-1 row-cols-md-3 g-5 p-2\">\r\n    <div class=\"col\">\r\n      <!-- Button to create a new deck in the folder -->\r\n      <a class=\"btn btn-outline-success text-decoration-none d-flex justify-content-center align-items-center shadow-md\" style=\"height: 15rem;\"\r\n         [routerLink]=\"['/deckform', 'create', folder.FolderId]\">\r\n        <i class=\"fa-solid fa-plus fa-5x\"></i>\r\n      </a>\r\n    </div>\r\n    <!-- Loop through each deck in the model -->\r\n    <div *ngFor=\"let deck of filteredDecks\">\r\n      <div class=\"col\">\r\n        <div class=\"card\" style=\"height: 15rem; background-color: #BCEAD5;\">\r\n          <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n            <!-- Display the deck name -->\r\n            {{deck.DeckName}}\r\n            <!-- Button to navigate to the deck dashboard -->\r\n            <a class=\"btn btn-light\"\r\n               [routerLink]=\"['/deck', deck.DeckId]\">\r\n              <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n            </a>\r\n          </div>\r\n          <div class=\"card-body d-flex flex-column justify-content-evenly overflow-hidden\">\r\n            <!-- Display deck description -->\r\n            <p class=\"card-text\">{{deck.DeckDescription}}</p>\r\n          </div>\r\n          <div class=\"card-footer text-muted d-flex justify-content-between\">\r\n            <!-- Display the creation date of the deck -->\r\n            {{deck.CreationDate}}\r\n            <!-- Button to play flashcards in the deck -->\r\n            <a class=\"btn btn-light\"\r\n               [routerLink]=\"['/flashcardone', deck.DeckId]\">\r\n              Play<i class=\"fa-solid fa-play ms-2\" style=\"color: green\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<div class=\"modal fade\"\r\n     id=\"deletefolder\"\r\n     role=\"dialog\"\r\n     data-bs-keyboard=\"false\"\r\n     data-bs-backdrop=\"static\"\r\n     aria-labelledby=\"deletemodal\"\r\n     aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <!-- Modal title -->\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Folder</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <!-- Container for modal body content -->\r\n        <div class=\"container-sm d-flex bg-white justify-content-between ps-5 pe-5\">\r\n          <div class=\"d-flex flex-column \">\r\n            <div>\r\n              <!-- Displaying folder details including ID, creation date, name, and the number of decks -->\r\n              <div class=\"text-danger-emphasis\">\r\n                <p><i class=\"fa-solid fa-folder-closed me-2\"></i> Folder ID: {{folder.FolderId}}</p>\r\n                <p><i class=\"fa-regular fa-calendar-days me-2\"></i> Date Created: {{folder.CreationDate}}</p>\r\n                <p><i class=\"fa-solid fa-tag me-2\"></i> Folder Name: {{folder.FolderName}}</p>\r\n              </div>\r\n              <hr />\r\n              <h6 class=\"text-danger\">Are you sure that you want to delete this folder?</h6>\r\n            </div>\r\n          </div>\r\n          <!-- Visual representation of the folder to be deleted (hidden on larger screens) -->\r\n          <div class=\"w-50 delete-folder d-none d-lg-block\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer d-flex justify-content-between\">\r\n        <!-- Button to go back to the folder dashboard without deleting -->\r\n        <a class=\"btn btn-secondary\"\r\n           data-bs-dismiss=\"modal\">\r\n          <i class=\"fa-solid fa-arrow-rotate-left\"></i>\r\n        </a>\r\n        <!-- Button to confirm and proceed with folder deletion -->\r\n        <button type=\"submit\" class=\"btn btn-danger\" (click)=\"deleteFolder()\" data-bs-dismiss=\"modal\">\r\n          <i class=\"fa-solid fa-trash\"></i>\r\n        </button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FolderService } from \"../services/folder.service\";\r\nimport { DeckService } from \"../services/deck.service\";\r\nimport { IFolder } from \"../models/folder\";\r\nimport { IDeck } from \"../models/deck\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-folder-component\",\r\n  templateUrl: \"./folder.component.html\"\r\n})\r\n\r\nexport class FolderComponent implements OnInit {\r\n  viewTitle: string = \"Table\";\r\n  private _listFilter: string = \"\";\r\n  folders: IFolder[] = [];\r\n  decks: IDeck[] = [];\r\n  folder: IFolder = {\r\n    FolderId: 0,\r\n    FolderName: \"\",\r\n    CreationDate: \"\"\r\n  };\r\n\r\n\r\n  // injecting the HttpClient service into the component\r\n  constructor(\r\n    private _router: Router,\r\n    private _folderService: FolderService,\r\n    private _deckService: DeckService,\r\n    private _route: ActivatedRoute) { }\r\n\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.filteredDecks = this.performFilterDeck(value);\r\n  }\r\n\r\n  // Function to update the CreationDate attribute to store only the date part\r\n  updateCreationDateDeck(deck: IDeck): IDeck {\r\n    const datePart = deck.CreationDate.split('T')[0];\r\n    deck.CreationDate = datePart;\r\n    return deck;\r\n  }\r\n\r\n  updateCreationDateFolder(folder: IFolder): IFolder {\r\n    const datePart = folder.CreationDate.split('T')[0];\r\n    folder.CreationDate = datePart;\r\n    return folder;\r\n  }\r\n\r\n  deleteFolder(): void {\r\n    this._folderService.deleteItem(this.folder.FolderId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate([\"/library\"]);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          console.log(\"Error deleting item:\", error);\r\n        }\r\n      });\r\n  }\r\n\r\n  getFolder(folderId: number): void {\r\n    this._folderService.getFolderById(folderId)\r\n      .subscribe(data => {\r\n        console.log(data)\r\n        this.folder = data;\r\n        this.updateCreationDateFolder(this.folder)\r\n      })\r\n  }\r\n\r\n  getDecks(folderId: number): void {\r\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\r\n    this._deckService.getDecksByFolderId(folderId)\r\n      .subscribe(data => { // subscribe() used to receive the data when the response is received\r\n        this.decks = data;\r\n        this.filteredDecks = this.decks;\r\n        this.decks.forEach(deck => {\r\n          this.updateCreationDateDeck(deck)\r\n        })\r\n      });\r\n  }\r\n\r\n  filteredDecks: IDeck[] = [];\r\n  performFilterDeck(filterBy: string): IDeck[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.decks.filter((deck: IDeck) =>\r\n      deck.DeckName.toLocaleLowerCase().includes(filterBy));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      const id = this.folder.FolderId = + params[\"id\"]\r\n      this.getFolder(id);\r\n      this.getDecks(id);\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}